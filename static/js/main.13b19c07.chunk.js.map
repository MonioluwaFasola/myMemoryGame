{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["singleCard","card","handleChoice","flipped","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","useEffect","prevCards","map","resetTurn","setTimeout","console","log","prevTurns","shuffledCards","sort","Math","random","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGe,SAASA,EAAT,GAAoD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,QAMtD,OACE,qBAAKC,UAAU,OAAf,SACQ,sBAAKA,UAAWD,EAAS,UAAY,GAArC,UACE,qBAAKC,UAAY,QAAQC,IAAKJ,EAAKI,IAAKC,IAAI,eAC5C,qBAAKF,UAAY,OAAOC,IAAK,iBAAiBE,QARpC,WACfL,EAAaD,EACjB,EAM6EK,IAAI,kBAIrF,CCbD,IAAME,EAAa,CACjB,CAAC,IAAO,oBAAqBC,SAAS,GACtC,CAAC,IAAO,oBAAqBA,SAAS,GACtC,CAAC,IAAO,kBAAmBA,SAAS,GACpC,CAAC,IAAO,oBAAqBA,SAAS,GACtC,CAAC,IAAO,oBAAqBA,SAAS,GACtC,CAAC,IAAO,mBAAoBA,SAAS,IAyExBC,MApEf,WAEE,MAAyBC,mBAAS,IAAlC,mBAAMC,EAAN,KAAaC,EAAb,KACA,EAAyBF,mBAAS,GAAlC,mBAAaG,GAAb,WACA,EAAiCH,mBAAS,MAA1C,mBAAMI,EAAN,KAAiBC,EAAjB,KACA,EAAiCL,mBAAS,MAA1C,mBAAMM,EAAN,KAAiBC,EAAjB,KAWMhB,EAAe,SAACD,GACpBc,EAAYG,EAAajB,GAAQe,EAAaf,EAE/C,EACGkB,qBAAU,WACJJ,GAAaE,IACZF,EAAUV,MAAQY,EAAUZ,KAC5BQ,GAAS,SAAAO,GACR,OAAOA,EAAUC,KAAI,SAAApB,GACnB,OAAIA,EAAKI,MAAQU,EAAUV,IACzB,2BAAUJ,GAAV,IAAgBQ,SAAS,IAElBR,CAEV,GACD,IACFqB,KAEAC,YAAW,kBAAMD,GAAN,GAAmB,KAMnC,GAAE,CAACP,EAAWE,IAEfO,QAAQC,IAAIb,GAEf,IAAMU,EAAY,WACjBN,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAY,GAAS,OAAIA,EAAY,CAAhB,GAClB,EAGF,OACE,sBAAKtB,UAAU,MAAf,UACE,mDACA,wBAAQG,QA/CS,WACnB,IAAMoB,EAAgB,UAAInB,EAAeA,GACxCoB,MAAK,kBAAMC,KAAKC,SAAW,EAAtB,IACLT,KAAI,SAAApB,GAAI,kCAASA,GAAT,IAAe8B,GAAGF,KAAKC,UAAvB,IAETjB,EAASc,GACTb,EAAS,EACV,EAwCG,mBACA,qBAAKV,UAAU,YAAf,SACGQ,EAAMS,KAAI,SAAApB,GAAI,OACV,cAAC,EAAD,CACCA,KAAMA,EACNC,aAAcA,EACdC,QAAWF,IAASc,GAAad,IAASgB,GAAahB,EAAKQ,SAH3CR,EAAK8B,GADb,QAUtB,EC5EDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.13b19c07.chunk.js","sourcesContent":["import React from 'react'\nimport './SingleCard.css'\n\nexport default function singleCard({card, handleChoice, flipped}) {\n\n    const handleClick = () => {\n         handleChoice(card)\n    }\n\n  return (\n    <div className=\"card\" >\n            <div className={flipped? \"flipped\" : \"\" }>\n              <img className = \"front\" src={card.src} alt=\"card front\"/>\n              <img className = \"back\" src =\"/img/cover.png\" onClick={handleClick} alt=\"card back\" />\n            </div>\n          </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport './App.css'\nimport SingleCard from './components/SingleCard'\n\nconst cardImages = [\n  {\"src\": \"/img/helmet-1.png\", matched: false}, \n  {\"src\": \"/img/potion-1.png\", matched: false},\n  {\"src\": \"/img/ring-1.png\", matched: false},\n  {\"src\": \"/img/scroll-1.png\", matched: false},\n  {\"src\": \"/img/shield-1.png\", matched: false},\n  {\"src\": \"/img/sword-1.png\", matched: false}\n]\n\n\n\nfunction App() {\n\n  const[cards, setCards] = useState([])\n  const[turns, setTurns] = useState(0)\n  const[choiceOne, setChoiceOne] = useState(null)\n  const[choiceTwo, setChoiceTwo] = useState(null)\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n    .sort(() => Math.random() - 0.5)\n    .map(card => ({...card, id:Math.random()}))\n\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n\n  }\n      useEffect(() => {\n        if (choiceOne && choiceTwo ){\n          if(choiceOne.src === choiceTwo.src){\n             setCards(prevCards => {\n              return prevCards.map(card => {\n                if (card.src === choiceOne.src){\n                  return{...card, matched: true}\n                } else {\n                  return card\n                }\n              })\n             })\n            resetTurn()\n          } else {\n            setTimeout(() => resetTurn(), 1000)\n            \n            \n          }\n        }\n\n      }, [choiceOne, choiceTwo])\n\n      console.log(cards)\n\n   const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n   }\n\n\n  return (\n    <div className=\"App\">\n      <h1>Build your memory</h1>\n      <button onClick={shuffleCards}>Start</button>\n      <div className=\"card-grid\">\n        {cards.map(card =>(\n             <SingleCard key ={card.id}\n              card={card} \n              handleChoice={handleChoice}\n              flipped = {card === choiceOne || card === choiceTwo || card.matched }/>\n          ))}\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}